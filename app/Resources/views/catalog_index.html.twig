{% extends 'base.html.twig' %}
{% block stylesheets %}
    <style>
        body {
            background: #fafafa;
            font-family: 'Jura', sans-serif;
        }
        .inactive {
            display: none;
        }

        .tree-item {
            position: relative;
            line-height: 40px;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            /*background: #79a002;*/
            background: #ebebeb;
            /*background: #eb9316;*/
            color: #000;
            transition: .25s;
            font-size: 16px;
            cursor: pointer;
        }

        .tree-item:hover {
            /*background: #8dae17;*/
            /*background: #ee9f30;*/
            background: #ee9f30;
            transition: .5s;
        }

        .tree-list {
            margin: 0;
            padding: 0;
            list-style: none;
        }

        .tree-item-control-closed::after {
            position: absolute;
            width: 16px;
            height: 16px;
            right: 8px;
            top: 12px;
            background: url( {{ asset('ajax-grid/img/arrow-right.png') }});
            content: '';
        }

        .tree-item-control-opened::after {
            position: absolute;
            width: 16px;
            height: 16px;
            right: 8px;
            top: 12px;
            background: url({{ asset('ajax-grid/img/arrow-down.png') }});
            content: '';
        }

        #category-tree {
            display: inline-block;
            position: relative;
            /*width: 300px;*/
            padding: 0;
            height: 100vh;
            background: #ebebeb;
            position: fixed;
            z-index: 1000;
            overflow-y: auto;
            overflow-x: auto;

        }

        .tree-item-active {
            background: #eb9316;
        }

        .tree-item-active:hover {
            background: #ee9f30;
        }
        #category-tree::-webkit-scrollbar{width:10px;height:10px;cursor:pointer}
        #category-tree::-webkit-scrollbar-track-piece{background:#eb9316;-webkit-border-radius:3px}
        #category-tree::-webkit-scrollbar-thumb:vertical{height:10px;background-color: #444444;-webkit-border-radius:3px;cursor:pointer}
        #category-tree::-webkit-scrollbar-thumb:horizontal{width:10px;background-color:#000;-webkit-border-radius:3px;cursor:pointer}

        #products-grid {
            margin-top: 20px;
        }

        .list-group {
            -webkit-box-shadow: none;
            box-shadow: none;
        }



        .zui-pager {
            margin: 5em;
        }
        .zui-pager--center {
            text-align: center;
        }
        .zui-pager--right {
            text-align: right;
        }
        .zui-pager .btn-group {
            list-style-type: none;
            margin: 0;
            padding: 0;
            display: inline-block;
        }
        .zui-pager .btn-group__item {
            display: inline-block;
            margin: 0;
            padding: 0;
            height: 40px;
            float: left;
        }
        .zui-pager .btn-group__item .btn {
            margin: 0;
            padding: .5em 1em;
            border: 0;
            font-weight: 300;
            background-color: transparent;
            box-shadow: inset 0px -2px 0px 0px #bbb;
            color: #bbb;
            outline: none;
        }
        .zui-pager .btn-group__item .btn:hover {
            box-shadow: inset 0px -4px 0px 0px #bbb;
        }
        .zui-pager .btn-group__item .current {
            box-shadow: inset 0px -4px 0px 0px #ee9f30;
            color: #ee9f30;
            font-weight: bold;
        }
        .zui-pager .btn-group__item .current:hover {
            box-shadow: inset 0px -4px 0px 0px #ee9f30;
            cursor: default;
        }
        .zui-pager .btn[disabled] {
            box-shadow: inset 0px -2px 0px 0px #e6e6e6;
            color: #e6e6e6;
        }
        .zui-pager .btn[disabled]:hover {
            box-shadow: inset 0px -2px 0px 0px #e6e6e6;
            cursor: default;
        }
        .zui-pager__input {
            display: inline-block;
            vertical-align: top;
            margin-left: 10px;
        }
        .zui-pager__input > input {
            width: 2em;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 0;
            line-height: 1;
        }
        .zui-pager .i-chevron-left,
        .zui-pager .i-chevron-right {
            margin: 15px;
            border-style: solid;
            border-color: #3a3a3a;
            width: 6px;
            height: 6px;
            display: block;
            cursor: pointer;
        }
        .zui-pager .i-chevron-left {
            border-width: 1px 0 0 1px;
            -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
        }
        .zui-pager .i-chevron-right {
            border-width: 1px 1px 0 0;
            -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
        }

        .i-caret-down {
            border-width: 3px;
            border-style: solid;
            border-color: black transparent transparent transparent;
            position: absolute;
            top: 18px;
            right: 3px;
        }

        .small .btn {
            position: relative;
            box-shadow: 0 0 0 transparent !important;
            padding-right: 20px !important;
            padding-left: 5px !important;
        }
        .small span:nth-of-type(1) {
            font-weight: bold;
            color: #739600;
        }
        .small span:nth-of-type(2) {
            margin: 0 5px;
        }
        .small .select-overlay {
            opacity: 0;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            width: 100%;
        }

        .zui-pager {
            margin: 0;
        }

        @media (max-width: 768px) {
            #category-tree {
                position: static;
                height: auto;
            }

            .zui-pager {
                margin: 0;
            }
        }

        .thumbnail {
            overflow: hidden;
            position: relative;
            object-fit: contain;
        }

        .thumbnail .product-image {
            display: inline-block;
            width: 100%;
            height: 100%;
            max-height: 250px;
            min-height: 250px;
            object-fit: contain;
        }

        .product-caption {
            font-size: 24px;
            color: #000;
            border-bottom: 1px solid transparent;
            padding: 10px;
        }

        .product-link:hover {
            text-decoration: none;
        }

        .product-caption:hover {
            color: #fff;
        }

        .product-caption-span {
            color: #000;
            border-bottom: 2px solid transparent;
            transition: .6s;
        }

        .product-link:hover .product-caption-span {
            color: #000;
            border-bottom: 2px solid #ee9f30;
            transition: .6s;
        }


    </style>
{% endblock %}
{% block body %}
    <div id="category-tree" class="col-md-2 col-xs-12 col-lg-2 col-sm-4"></div>
    <div id="products-grid" class="col-md-10 col-xs-12 col-sm-8 col-lg-10 col-md-offset-2
    col-sm-offset-4 col-lg-offset-2">

    </div>
    <div class="zui-pager col-md-12 col-xs-12 col-sm-12 col-lg-12 text-center">
        <ol class="btn-group">
            <li class="btn-group__item">
                <i class="i-chevron-left"></i>
            </li>
            <li class="btn-group__item">
                <button class="btn btn--basic current">1</button>
            </li>
            <li class="btn-group__item">
                <button class="btn btn--basic" disabled="disabled" style="display: none;">...</button>
            </li>
            <li class="btn-group__item">
                <button class="btn btn--basic"><span>2</span></button>
            </li>
            <li class="btn-group__item">
                <button class="btn btn--basic"><span>3</span></button>
            </li>
            <li class="btn-group__item">
                <button class="btn btn--basic"><span>4</span></button>
            </li>
            <li class="btn-group__item">
                <button class="btn btn--basic"><span>5</span></button>
            </li>
            <li class="btn-group__item">
                <button class="btn btn--basic" disabled="disabled">...</button>
            </li>
            <li class="btn-group__item">
                <button class="btn btn--basic"><span>40</span></button>
            </li>
            <li class="btn-group__item">
                <i class="i-chevron-right"></i>
            </li>
        </ol>
    </div>

    <script>

        $.fn.catalogBuilder = function(options) {

            var rootElement = this[0]; //root element for appending
            rootElement.setAttribute('tree-level', '2');
            var productsGrid = document.getElementById('products-grid');

            var productViewLink = 'http://127.0.0.1:8000/product/';
            var imagesStorageLink = 'http://127.0.0.1:8000/uploads/images/';
            var ulClassCSS = 'tree-list';
            var liClassCSS = 'tree-item';
            var liControlOpenCSS = 'tree-item-control-opened';
            var liControlCloseCSS = 'tree-item-control-closed';
            var ajaxProductLink = 'ajax/product';
            var ajaxCategoryLink = 'ajax/category/';

            var activeLi; //variable for delegation

            rootElement.onclick = function (event) {
                delegateClick(event);
            }

            buildCategoryTree(null, rootElement);
            getProductsAjax('');
            
            function generateSplitter(level) {
                var splitter = '&nbsp;&nbsp;';
                var completeSplitter = '';
                for (var i = 0; i<level; i++) {
                    completeSplitter += splitter;
                }
                return completeSplitter;
            }
            function createProductView(element) {
                var container = document.createElement('div');
                var thumbnail = document.createElement('div');
                var captionContainer = document.createElement('div');
                var caption = document.createElement('h4');
                var productLink = document.createElement('a');
                var productImage = document.createElement('img');
                var productCaptionSpan = document.createElement('span');

                thumbnail.setAttribute('class', 'thumbnail');
                container.setAttribute('class', 'item col-xs-12 col-md-6 col-lg-4');
                captionContainer.setAttribute('class', 'caption');
                caption.setAttribute('class', 'group inner list-group-item-heading text-center product-caption');

                productLink.setAttribute('href', productViewLink+element.id);
                productLink.setAttribute('class', "product-link");

                productImage.setAttribute('src', imagesStorageLink+element.image);
                productImage.setAttribute('class', "group list-group-image product-image");

                productCaptionSpan.setAttribute('class', 'product-caption-span');
                productCaptionSpan.innerHTML = element.name;

                caption.appendChild(productCaptionSpan);
                captionContainer.appendChild(caption);
                thumbnail.appendChild(productImage);
                thumbnail.appendChild(caption);
                productLink.appendChild(thumbnail);
                container.appendChild(productLink);

                return container;
            }
            function getProductsAjax(categoryId) {
                deleteChilds(productsGrid);
                $.getJSON(ajaxProductLink, {
                    category: categoryId
                }, function(JSON_Data) {
                    $.each(JSON_Data, function(index, element) {
                        var product = createProductView(element);
                        productsGrid.appendChild(product);
                    });
                });
            }
            function deleteChilds(element) {
                while (element.firstChild) {
                    element.removeChild(element.firstChild);
                }
                return element;
            }
            function buildCategoryTree(categoryId, parent) {
                $.getJSON(ajaxCategoryLink + categoryId, function(JSON_Data) {
                    var categoryList = createUl();
                    $.each(JSON_Data, function(index, element) {
                        var categoryListItem = createLi(element.children, element.id, element.title,
                            parent.getAttribute('tree-level'));

                        categoryList.appendChild(categoryListItem);
                    });
                    parent.appendChild(categoryList);
                })
            }
            function createUl() {
                var ul = document.createElement('ul');
                ul.setAttribute('class', ulClassCSS);

                return ul;
            }
            function createLi(expandable, categoryID, categoryTitle, treeLevel) {

                var li = document.createElement('li');
                var expandLevel = parseInt(treeLevel)+1;

                li.setAttribute('expanded', 'false');
                li.setAttribute('downloaded', 'false');
                li.setAttribute('category_id', categoryID);
                li.setAttribute('tree-level', expandLevel.toString());
                li.classList.add(liClassCSS);
                li.innerHTML = generateSplitter(treeLevel) + categoryTitle + generateSplitter(2);

                if (expandable === false) {
                    li.setAttribute('childs', 'false');
                } else if (expandable === true) {
                    li.setAttribute('childs', 'true');
                    li.classList.add(liControlCloseCSS);
                }

                return li;
            }
            function delegateClick(event) {
                var target = event.target;

                if (target.tagName !== "DIV" && target.tagName !== "UL") {

                    var expand = target.getAttribute('expanded');
                    var download = target.getAttribute('downloaded');
                    sendProductsRequest(target);
                    if (target.getAttribute('childs') === 'false') {
                        return;
                    }

                    if (expand === 'false' && download === 'false') {
                        //if rolled up and not downloaded
                        target.setAttribute('expanded', 'true');
                        target.setAttribute('downloaded', 'true');
                        buildCategoryTree(target.getAttribute('category_id'), event.target);
                        toggleClasses(target, liControlCloseCSS, liControlOpenCSS);
                    } else if (expand === 'true' && download === 'true') {
                        //if expanded and downloaded
                        target.setAttribute('expanded', 'false');
                        (target.getElementsByTagName('ul')[0]).classList.add('inactive');
                        toggleClasses(target, liControlCloseCSS, liControlOpenCSS);
                    } else if (expand === 'false' && download === 'true') {
                        //if rolled up and downloaded
                        target.setAttribute('expanded', 'true');
                        (target.getElementsByTagName('ul')[0]).classList.remove('inactive');
                        toggleClasses(target, liControlCloseCSS, liControlOpenCSS);
                    }

                }
            }
            function toggleClasses(target ,firstClass, secondClass) {
                target.classList.toggle(firstClass);
                target.classList.toggle(secondClass);
                return target;
            }
            function sendProductsRequest(node) {
                if (activeLi === node) {
                    return;
                } else {

                    if (activeLi) {
                        activeLi.classList.remove('tree-item-active');
                    }
                    activeLi = node;
                    activeLi.classList.add('tree-item-active');
                    //ajax request here!
                    getProductsAjax(activeLi.getAttribute('category_id'));

                }
            }

        }

        $("#category-tree").catalogBuilder();




    </script>
{% endblock %}