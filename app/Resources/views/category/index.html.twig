{% extends 'base.html.twig' %}

{% block body %}
    <h1>Categories list</h1>

    <table>
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        {% for category in categories %}
            <tr>
                <td><a href="{{ path('category_show', { 'id': category.id }) }}">{{ category.id }}</a></td>
                <td>{{ category.title }}</td>
                <td>
                    <ul>
                        <li>
                            <a href="{{ path('category_show', { 'id': category.id }) }}">show</a>
                        </li>
                        <li>
                            <a href="{{ path('category_edit', { 'id': category.id }) }}">edit</a>
                        </li>
                    </ul>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <ul>
        <li>
            <a href="{{ path('category_new') }}">Create a new category</a>
        </li>
    </ul>

    <script>

        $.fn.ajaxgrid = function(options) {
            var categoryTree;

            initializeBaseElements();
            document.body.appendChild(categoryTree);

            buildCategoryTree(null, categoryTree);



            function applyOptions(options) {
                if (!options.dataURL) {
                    throw 'Wrong "dataUrl" exception';
                }
                if (!options.editUrl) {
                    throw 'Wrong "editUrl" exception';
                }
                if (!options.sortableColumns) {
                    options.sortableColumns = [];
                }
                if (!options.filterableColumns) {
                    options.filterableColumns = [];
                }
                if (!options.rowsPerPage) {
                    options.rowsPerPage = 5;
                }
            }

            function initializeBaseElements() {
                categoryTree = document.createElement('div');
                categoryTree.classList.add('category-tree');
            }

            function buildCategoryTree(categoryId, parent) {
                $.getJSON('src/ss.json', function(JSON_Data) {
                    var categoryList = document.createElement('ul');
                    categoryList.classList.add('category-tree-list');
                    $.each(JSON_Data, function(index, element) {
                        var categoryListItem = document.createElement('li');
                        var checkbox = document.createElement('input');
                        checkbox.setAttribute('type', 'checkbox');
                        checkbox.setAttribute('name', element.id);
                        console.log(checkbox);
                        categoryListItem.classList.add('category-tree-list-item');
                        categoryListItem.classList.add('category-tree-list-item-closed');
                        categoryListItem.setAttribute('category_id', element.id);
                        categoryListItem.setAttribute('class', 'category-tree-item category-tree-item-closed');
                        categoryListItem.setAttribute('expanded', 'false');
                        categoryListItem.setAttribute('downloaded', 'false');

                        categoryListItem.innerHTML = element.title;
                        categoryListItem.appendChild(checkbox);
                        categoryList.appendChild(categoryListItem);
                        addOnClick(categoryListItem);
                    });
                    parent.appendChild(categoryList);
                })
            }

            function addOnClick(element) {
                element.onclick = function (event) {
                    event.preventDefault();
                    event.stopPropagation();
                    var target = event.target;
                    var expand = target.getAttribute('expanded');
                    var download = target.getAttribute('downloaded');

                    if (expand === 'false' && download === 'false') {
                        target.setAttribute('expanded', 'true');
                        target.setAttribute('downloaded', 'true');
                        buildCategoryTree(target.getAttribute('category_id'), event.target);
                        target.classList.remove('category-tree-item-closed');
                        target.classList.add('category-tree-item-opened');
                    } else if (expand === 'true' && download === 'true') {
                        target.setAttribute('expanded', 'false');
                        (target.getElementsByTagName('ul')[0]).classList.add('inactive');
                        target.classList.add('category-tree-item-closed');
                        target.classList.remove('category-tree-item-opened');
                    } else if (expand === 'false' && download === 'true') {
                        target.setAttribute('expanded', 'true');
                        (target.getElementsByTagName('ul')[0]).classList.remove('inactive');
                        target.classList.remove('category-tree-item-closed');
                        target.classList.add('category-tree-item-opened');
                    }
                }
            }

        }

        $("#plg").ajaxgrid();




    </script>
    {% endblock body %}